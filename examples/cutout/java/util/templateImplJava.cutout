package {packageName};

import cutout.java.Renderer;
import cutout.java.TextTemplate;

import java.io.IOException;

{?templateImplClass}
public final class {className} extends {baseClassName} \{

	static public final {baseClassName} INSTANCE = new {className}();
	
	{?constructor}
	private {className}() \{
		
		super({?constructorArgs}{delimiter = ,}{?arg}
			{?part}{className}.INSTANCE{/part}
			{?empty}TextTemplate.EMPTY{/empty}
			{?constant}new TextTemplate({stringValue}){/constant}
			{?value}{stringValue}{/value}
		{/arg}
		{/constructorArgs});
		
	\}
	{/constructor}
	
	@Override
	public Renderer apply({?params}{delimiter = ,}{type} {name}{/params}) \{

		return (out) -> \{
		
			{?renderStatements}
				{?renderContent}out.append({stringValue});{/renderContent}
				{?renderValue}out.append({name});{/renderValue}
				{?renderTemplate}params.{name}.render(out);{/renderTemplate}
			{/renderStatements}
		\};
	\}

	{?partsClassesMembers}
	static {?partClass}{/partClass}
	{/partsClassesMembers}
\}
{/templateImplClass}